import { useState } from "react";
import { Link } from "react-router-dom";

const Login = () => {
    const [phone, setPhone] = useState("");
    const [password, setPassword] = useState("");
    const [error, setError] = useState("");
    const [loggedIn, setLoggedIn] = useState(false);

    const handleLogin = () => {
        if (!/^[0-9]{10}$/.test(phone)) {
            setError("Enter a valid 10-digit phone number");
            return;
        }
        if (password.trim() === "") {
            setError("Password cannot be empty");
            return;
        }
        setError("");
        setLoggedIn(true); // Simulate successful login
    };

    return (
        <div className="flex flex-row items-center justify-center h-screen bg-gray-100 ">
            <div className="w-96 p-6 shadow-lg rounded-2xl bg-white">
                <h2 className="text-xl font-bold text-center mb-4">
                    {loggedIn ? "Welcome!" : "Login"}
                </h2>

                {!loggedIn ? (
                    <>
                        {/* Phone Number Input */}
                        <input
                            type="tel"
                            placeholder="Enter Phone Number"
                            value={phone}
                            onChange={(e) => setPhone(e.target.value)}
                            className="mb-3 border rounded-lg p-2 w-full"
                        />

                        {/* Password Input */}
                        <input
                            type="password"
                            placeholder="Enter Password"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                            className="mb-3 border rounded-lg p-2 w-full"
                        />

                        {/* Error Message */}
                        {error && <p className="text-red-500 text-sm mb-2">{error}</p>}

                        {/* Login Button */}
                        <button
                            type="button"
                            className="w-full bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-lg mt-2"
                            onClick={handleLogin}
                        >
                            Login
                        </button>
                        <h1 className="pt-2">ðŸŒ±Be part of a cleaner tomorrow-<Link to="/registration"  className="text-blue-500 hover:underline">Register now!</Link>
                </h1>
                    </>
                ) : (
                    <p className="text-green-600 text-center">You are logged in!</p>
                )}

                
            </div>
            
        </div>
    );
};

export default Login;





if (!navigator.geolocation) {
    setError("Geolocation is not supported by your browser.");
    return;
}

const watchId = navigator.geolocation.watchPosition(
    (position) => {
        setLocation({
            latitude: position.coords.latitude,
            longitude: position.coords.longitude,
        });
        setError(""); // Clear any previous errors
    },
    (err) => {
        setError("Permission denied or error getting location.");
        console.error("Error getting location:", err);
    }
);

return () => navigator.geolocation.clearWatch(watchId);